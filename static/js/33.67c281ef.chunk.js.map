{"version":3,"file":"static/js/33.67c281ef.chunk.js","mappings":";qRAGaA,EAAaC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAKvBC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAElB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,aAAa,IAIxCC,EAAcR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,yBAIxBQ,EAAkBV,EAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qDAK3BU,EAAwBZ,EAAAA,GAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,iCAIhCY,EAAiBd,EAAAA,GAAAA,GAASe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,+DAO1Bc,EAAiBhB,EAAAA,GAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,8BAI1BgB,GAAgBlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAeoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,iSAOzB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,aAAa,IAO7B,SAAAF,GAAK,OAAIA,EAAMC,MAAMe,OAAOC,YAAY,0BCnDhEC,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,EAAA,KAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,CAAA,WAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,GAAA,OAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,EAAA,EAAAvB,EAAAwB,KAAAA,EAAA,IAAAiB,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,GAAA,8BAAAgC,EAAA3C,OAAA4C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA9C,GAAAG,EAAAoC,KAAAO,EAAAlC,KAAA+B,EAAAG,GAAA,IAAAE,EAAAN,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAM,EAAA/C,GAAA,0BAAAgD,SAAA,SAAAC,GAAAjC,EAAAhB,EAAAiD,GAAA,SAAAd,GAAA,YAAAe,QAAAD,EAAAd,EAAA,gBAAAgB,EAAAvB,EAAAwB,GAAA,SAAAC,EAAAJ,EAAAd,EAAAmB,EAAAC,GAAA,IAAAC,EAAAvB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAqB,EAAApB,KAAA,KAAAqB,EAAAD,EAAArB,IAAA5B,EAAAkD,EAAAlD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA6C,EAAAE,QAAA/C,EAAAmD,SAAAC,MAAA,SAAApD,GAAA8C,EAAA,OAAA9C,EAAA+C,EAAAC,EAAA,aAAAnC,GAAAiC,EAAA,QAAAjC,EAAAkC,EAAAC,EAAA,IAAAH,EAAAE,QAAA/C,GAAAoD,MAAA,SAAAC,GAAAH,EAAAlD,MAAAqD,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAArB,IAAA,KAAA2B,EAAA3D,EAAA,gBAAAI,MAAA,SAAA0C,EAAAd,GAAA,SAAA4B,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAd,EAAAmB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA5B,WAAA,EAAA2D,MAAA,OAAApC,EAAAmB,OAAAA,EAAAnB,EAAAK,IAAAA,IAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,CAAA,cAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,IAAA,gBAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAR,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAApB,KAAA,IAAA4B,EAAAlC,EAAAoC,KAAA,6BAAAV,EAAArB,MAAAG,EAAA,gBAAA/B,MAAAiD,EAAArB,IAAA+B,KAAApC,EAAAoC,KAAA,WAAAV,EAAApB,OAAA4B,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAqB,EAAArB,IAAA,YAAAkC,EAAAF,EAAArC,GAAA,IAAA4C,EAAA5C,EAAAmB,OAAAA,EAAAkB,EAAAxD,SAAA+D,GAAA,QAAAC,IAAA1B,EAAA,OAAAnB,EAAAqC,SAAA,eAAAO,GAAAP,EAAAxD,SAAAiE,SAAA9C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAwC,EAAAN,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAAyB,IAAA5C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAH,EAAA,aAAApC,EAAA,IAAAkB,EAAAvB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAApB,KAAA,OAAAN,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAqC,SAAA,KAAA7B,EAAA,IAAAwC,EAAAtB,EAAArB,IAAA,OAAA2C,EAAAA,EAAAZ,MAAApC,EAAAqC,EAAAY,YAAAD,EAAAvE,MAAAuB,EAAAkD,KAAAb,EAAAc,QAAA,WAAAnD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,GAAA7C,EAAAqC,SAAA,KAAA7B,GAAAwC,GAAAhD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAqC,SAAA,KAAA7B,EAAA,UAAA4C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAApB,KAAA,gBAAAoB,EAAArB,IAAAiD,EAAAQ,WAAApC,CAAA,UAAAzB,EAAAN,GAAA,KAAAgE,WAAA,EAAAJ,OAAA,SAAA5D,EAAAuB,QAAAkC,EAAA,WAAAW,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA1D,KAAAyD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAhG,EAAAoC,KAAAyD,EAAAI,GAAA,OAAAlB,EAAAzE,MAAAuF,EAAAI,GAAAlB,EAAAd,MAAA,EAAAc,EAAA,OAAAA,EAAAzE,WAAAoE,EAAAK,EAAAd,MAAA,EAAAc,CAAA,SAAAA,EAAAA,KAAAA,CAAA,YAAAH,iBAAAiB,EAAA,2BAAAvD,EAAAvC,UAAAwC,EAAArC,EAAA2C,EAAA,eAAAvC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA4D,YAAAnF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAuG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA/D,GAAA,uBAAA+D,EAAAH,aAAAG,EAAAE,MAAA,EAAA3G,EAAA4G,KAAA,SAAAJ,GAAA,OAAAtG,OAAA2G,eAAA3G,OAAA2G,eAAAL,EAAA7D,IAAA6D,EAAAM,UAAAnE,EAAAxB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAArG,UAAAD,OAAA8B,OAAAiB,GAAAuD,CAAA,EAAAxG,EAAA+G,MAAA,SAAAzE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAY,EAAAI,EAAAnD,WAAAgB,EAAAmC,EAAAnD,UAAAY,GAAA,0BAAAf,EAAAsD,cAAAA,EAAAtD,EAAAgH,MAAA,SAAAvF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,IAAAA,EAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAvD,EAAAuG,oBAAA7E,GAAAwF,EAAAA,EAAA/B,OAAArB,MAAA,SAAAF,GAAA,OAAAA,EAAAS,KAAAT,EAAAlD,MAAAwG,EAAA/B,MAAA,KAAAjC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,GAAA,0BAAAM,EAAA8B,EAAA,qDAAAjD,EAAAmH,KAAA,SAAAC,GAAA,IAAAC,EAAAnH,OAAAkH,GAAAD,EAAA,WAAA3G,KAAA6G,EAAAF,EAAAtB,KAAArF,GAAA,OAAA2G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA5F,EAAA2G,EAAAI,MAAA,GAAA/G,KAAA6G,EAAA,OAAAlC,EAAAzE,MAAAF,EAAA2E,EAAAd,MAAA,EAAAc,CAAA,QAAAA,EAAAd,MAAA,EAAAc,CAAA,GAAAnF,EAAAgD,OAAAA,EAAAd,EAAA/B,UAAA,CAAAuG,YAAAxE,EAAA8D,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAV,KAAA,KAAAC,WAAAI,EAAA,KAAAT,MAAA,OAAAC,SAAA,UAAAlB,OAAA,YAAAd,SAAAwC,EAAA,KAAAc,WAAAzC,QAAA2C,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAtH,EAAAoC,KAAA,KAAAmE,KAAAR,OAAAQ,EAAAgB,MAAA,WAAAhB,QAAA7B,EAAA,EAAA8C,KAAA,gBAAAvD,MAAA,MAAAwD,EAAA,KAAAjC,WAAA,GAAAG,WAAA,aAAA8B,EAAAtF,KAAA,MAAAsF,EAAAvF,IAAA,YAAAwF,IAAA,EAAAnD,kBAAA,SAAAoD,GAAA,QAAA1D,KAAA,MAAA0D,EAAA,IAAA9F,EAAA,cAAA+F,EAAAC,EAAAC,GAAA,OAAAvE,EAAApB,KAAA,QAAAoB,EAAArB,IAAAyF,EAAA9F,EAAAkD,KAAA8C,EAAAC,IAAAjG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,KAAAoD,CAAA,SAAA7B,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA1C,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA,KAAAiC,KAAA,KAAAU,EAAA/H,EAAAoC,KAAA+C,EAAA,YAAA6C,EAAAhI,EAAAoC,KAAA+C,EAAA,iBAAA4C,GAAAC,EAAA,SAAAX,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,WAAA,SAAAyC,GAAA,QAAAV,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAhE,MAAA,kDAAAqD,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,WAAA,KAAAd,OAAA,SAAArC,EAAAD,GAAA,QAAA+D,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAC,QAAA,KAAAiC,MAAArH,EAAAoC,KAAA+C,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAA9F,GAAA,aAAAA,IAAA8F,EAAA7C,QAAAlD,GAAAA,GAAA+F,EAAA3C,aAAA2C,EAAA,UAAA1E,EAAA0E,EAAAA,EAAAtC,WAAA,UAAApC,EAAApB,KAAAA,EAAAoB,EAAArB,IAAAA,EAAA+F,GAAA,KAAAjF,OAAA,YAAA+B,KAAAkD,EAAA3C,WAAAjD,GAAA,KAAA6F,SAAA3E,EAAA,EAAA2E,SAAA,SAAA3E,EAAAgC,GAAA,aAAAhC,EAAApB,KAAA,MAAAoB,EAAArB,IAAA,gBAAAqB,EAAApB,MAAA,aAAAoB,EAAApB,KAAA,KAAA4C,KAAAxB,EAAArB,IAAA,WAAAqB,EAAApB,MAAA,KAAAuF,KAAA,KAAAxF,IAAAqB,EAAArB,IAAA,KAAAc,OAAA,cAAA+B,KAAA,kBAAAxB,EAAApB,MAAAoD,IAAA,KAAAR,KAAAQ,GAAAlD,CAAA,EAAA8F,OAAA,SAAA7C,GAAA,QAAAW,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAG,aAAAA,EAAA,YAAA4C,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA9C,CAAA,GAAA+F,MAAA,SAAAhD,GAAA,QAAAa,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAApB,KAAA,KAAAkG,EAAA9E,EAAArB,IAAAwD,EAAAP,EAAA,QAAAkD,CAAA,YAAArE,MAAA,0BAAAsE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,YAAAd,SAAA,CAAAxD,SAAAkC,EAAAiD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAAhC,SAAA,KAAAd,SAAAwC,GAAArC,CAAA,GAAAzC,CAAA,CAmBA,IAoEA,EApEqB,WAAO,IAAD2I,EAAAC,EACzBC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACwB,SAAAC,IAO/B,OAP+BA,GAAAC,EAAAA,EAAAA,GAAA5J,IAAA6G,MAAhC,SAAAgD,IAAA,IAAAC,EAAA,OAAA9J,IAAAyB,MAAA,SAAAsI,GAAA,cAAAA,EAAArC,KAAAqC,EAAA3E,MAAA,cAAA2E,EAAArC,KAAA,EAAAqC,EAAA3E,KAAA,GAEuB4E,EAAAA,EAAAA,IAAgBR,GAAS,KAAD,EAArCM,EAAIC,EAAArF,KACVyE,EAASW,GAAMC,EAAA3E,KAAA,gBAAA2E,EAAArC,KAAA,EAAAqC,EAAAE,GAAAF,EAAA,SAEfG,QAAQC,KAAIJ,EAAAE,IAAQ,yBAAAF,EAAAlC,OAAA,GAAAgC,EAAA,mBAEvBO,MAAA,KAAAC,UAAA,EARc,WACiBV,EAAAS,MAAC,KAADC,UAAA,CAShCC,EACF,GAAG,CAACd,IAEJ,IAAMe,EAAQ,kCAAAC,OAAqCtB,EAAMuB,aAEnDC,GAAWC,EAAAA,EAAAA,QAA2B,QAArB/B,EAAe,QAAfC,EAACS,EAASlF,aAAK,IAAAyE,OAAA,EAAdA,EAAgB+B,YAAI,IAAAhC,EAAAA,EAAI,KAEhD,OACEiC,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAC,UACZC,EAAAA,EAAAA,MAACC,EAAAA,GAAe,CAAAF,SAAA,EACdF,EAAAA,EAAAA,KAACK,EAAAA,GAAY,CACXC,SAAS,WACTC,QAAQ,aACRC,QAAS,kBAAMjC,EAASsB,EAASY,QAAQ,EAACP,SAC3C,aAKDF,EAAAA,EAAAA,KAACU,EAAAA,GAAe,CAAAR,SAAE7B,EAAMsC,SACxBR,EAAAA,EAAAA,MAACxM,EAAU,CAAAuM,SAAA,EACTF,EAAAA,EAAAA,KAACjM,EAAW,CAAC6M,IAAKlB,EAAUmB,IAAI,MAChCV,EAAAA,EAAAA,MAAC/L,EAAW,CAAA8L,SAAA,EACVF,EAAAA,EAAAA,KAAC1L,EAAe,CAAA4L,SAAC,cACjBF,EAAAA,EAAAA,KAACxL,EAAqB,CAAA0L,SAAE7B,EAAMyC,YAC9Bd,EAAAA,EAAAA,KAAC1L,EAAe,CAAA4L,SAAC,YACjBF,EAAAA,EAAAA,KAACxL,EAAqB,CAAA0L,SACnB7B,EAAM0C,OACH1C,EAAM0C,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKlF,IAAI,IAAEmF,KAAK,MACzC,YAKVlB,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAC1L,EAAe,CAAA4L,SAAC,4BACjBC,EAAAA,EAAAA,MAACzL,EAAc,CAAAwL,SAAA,EACbF,EAAAA,EAAAA,KAACpL,EAAc,CAAAsL,UACbF,EAAAA,EAAAA,KAAClL,EAAa,CAACqM,GAAI,OAAOjB,SAAC,YAE7BF,EAAAA,EAAAA,KAACpL,EAAc,CAAAsL,UACbF,EAAAA,EAAAA,KAAClL,EAAa,CAACqM,GAAI,UAAUjB,SAAC,kBAIlCF,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,QAIf","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const StyledCard = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const StyledImage = styled.img`\n  width: 55%;\n  border-radius: ${props => props.theme.$borderRadius};\n  overflow: hidden;\n`;\n\nexport const StyledInner = styled.div`\n  width: 45%;\n`;\n\nexport const StyledCardTitle = styled.h2`\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const StyledCardDescription = styled.p`\n  margin-bottom: 7px;\n`;\n\nexport const StyledInfoList = styled.ul`\n  display: flex;\n\n  gap: 35px;\n  margin: 20px 0;\n`;\n\nexport const StyledInfoItem = styled.li`\n  font-size: 17px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: 80px;\n  padding: 8px 8px;\n  border-radius: ${props => props.theme.$borderRadius};\n  text-decoration: none;\n  color: black;\n  background-color: lightblue;\n\n  &.active {\n    color: white;\n    background-color: ${props => props.theme.colors.$accentColor};\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api-services';\nimport {\n  StyledButton,\n  StyledContainer,\n  StyledPageTitle,\n  StyledSection,\n} from 'styles/GlobalStyle';\nimport {\n  StyledCard,\n  StyledCardDescription,\n  StyledCardTitle,\n  StyledImage,\n  StyledInfoItem,\n  StyledInfoList,\n  StyledInner,\n  StyledNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const imageUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n  const backLink = useRef(location.state?.from ?? '/');\n\n  return (\n    <StyledSection>\n      <StyledContainer>\n        <StyledButton\n          $padding=\"7px 10px\"\n          $margin=\"0 0 15px 0\"\n          onClick={() => navigate(backLink.current)}\n        >\n          Go back\n        </StyledButton>\n        {/* <Link to={backLink}>Go back</Link> */}\n\n        <StyledPageTitle>{movie.title}</StyledPageTitle>\n        <StyledCard>\n          <StyledImage src={imageUrl} alt=\"\" />\n          <StyledInner>\n            <StyledCardTitle>Overview</StyledCardTitle>\n            <StyledCardDescription>{movie.overview}</StyledCardDescription>\n            <StyledCardTitle>Genres</StyledCardTitle>\n            <StyledCardDescription>\n              {movie.genres\n                ? movie.genres.map(item => item.name).join(', ')\n                : ''}\n            </StyledCardDescription>\n          </StyledInner>\n        </StyledCard>\n\n        <hr />\n\n        <StyledCardTitle>Additional information</StyledCardTitle>\n        <StyledInfoList>\n          <StyledInfoItem>\n            <StyledNavLink to={'cast'}>Cast</StyledNavLink>\n          </StyledInfoItem>\n          <StyledInfoItem>\n            <StyledNavLink to={'reviews'}>Reviews</StyledNavLink>\n          </StyledInfoItem>\n        </StyledInfoList>\n\n        <Outlet />\n      </StyledContainer>\n    </StyledSection>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledCard","styled","_templateObject","_taggedTemplateLiteral","StyledImage","_templateObject2","props","theme","$borderRadius","StyledInner","_templateObject3","StyledCardTitle","_templateObject4","StyledCardDescription","_templateObject5","StyledInfoList","_templateObject6","StyledInfoItem","_templateObject7","StyledNavLink","NavLink","_templateObject8","colors","$accentColor","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","navigate","useNavigate","location","useLocation","movieId","useParams","useEffect","_fetchMovieDetails","_asyncToGenerator","_callee","data","_context","getMovieDetails","t0","console","warn","apply","arguments","fetchMovieDetails","imageUrl","concat","poster_path","backLink","useRef","from","_jsx","StyledSection","children","_jsxs","StyledContainer","StyledButton","$padding","$margin","onClick","current","StyledPageTitle","title","src","alt","overview","genres","map","item","join","to","Outlet"],"sourceRoot":""}